{"version":3,"sources":["js/constants.js","js/markupImages.js","js/fetch.js","js/modal.js","js/apiService.js"],"names":["fetchImagesBtnAdditional","document","querySelector","searchForm","inputField","galleryImagesList","alertPopup","lightbox","lightboxImage","lightboxClose","markupImages","images","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","pageURL","join","fetchImages","params","URLSearchParams","nameOfImage","page","limit","fetch","then","response","ok","Error","status","json","openModal","event","target","nodeName","preventDefault","classList","add","src","dataset","source","console","dir","alt","overlayWindowClose","remove","overlayWindowsCloseByMouse","MouseEvent","overlayWindowCloseByEsc","key","addEventListener","isAlertVisible","buttonShowOnPageIncrease","value","toggleAlertPopupEndOfItems","log","renderImages","markup","insertAdjacentHTML","clearContent","innerHTML","setTimeout","hits","length","alert","catch","error","totalPages","Math","ceil","total","scrollIntoView","behavior","block"],"mappings":"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","file":"apiService.4c8f8830.js","sourceRoot":"../src","sourcesContent":["'use strict'\n\n// const fetchImagesBtnInitial = document.querySelector(\".fetch-initial\");\nconst fetchImagesBtnAdditional = document.querySelector(\".fetch-additional\");\nconst searchForm = document.querySelector(\"#search-form\")\nconst inputField = document.querySelector('[name=\"query\"]')\nconst galleryImagesList = document.querySelector(\".gallery\");\nconst alertPopup = document.querySelector(\".alert\");\nconst lightbox = document.querySelector('.lightbox');\nconst lightboxImage = document.querySelector('.lightbox__image');\nconst lightboxClose = document.querySelector('button[data-action=\"close-lightbox\"]');\n\n\n\nexport { fetchImagesBtnAdditional, searchForm, inputField, galleryImagesList, lightbox, lightboxImage, lightboxClose, alertPopup };","'use strict';\n\n//====формирует разметку карточки=====\nexport function markupImages(images) {\n  // console.log(images);\n  return images\n    .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads, pageURL }) => {\n      return `<div class=\"photo-card\">\n  <img src=${webformatURL} alt=${tags} data-source=${largeImageURL} class=\"photo-card_img\"/>\n\n  <div class=\"stats\">\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">thumb_up</i>\n      ${likes}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">visibility</i>\n      ${views}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">comment</i>\n      ${comments}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">cloud_download</i>\n      ${downloads}\n    </p>\n    <a href=\"${pageURL}\" class=\"stats-item home-page-link\" target=\"blank\">\n    <i class=\"material-icons\">home</i>\n      home page\n      </a>\n  </div>\n  \n</div>`;\n    })\n    .join('');\n}\n","'use strict'\n// import axios from 'axios';\nimport { nameOfImage, page, limit } from './apiService';\n\n// console.dir('axios', axios);\n\nexport function fetchImages() { //get information from backend\n  const params = new URLSearchParams({\n    \"q\": nameOfImage,\n    \"page\": page,\n    \"per_page\": limit,\n    \"image_type\": \"photo\",\n  });\n\n  return fetch(`https://pixabay.com/api/?key=22969480-c3583c2b4b1ca4646f49ed52f&${params}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //console.log(response);\n      // return Array.from(response.json()); //при преобразовании возвращаемого Json-объекта с пом. Array.from в массив \"теряется\" св-во length, length = 0;\n      return response.json();\n    }\n    );\n  // return axios.get(`https://pixabay.com/api/?key=22969480-c3583c2b4b1ca4646f49ed52f&${params}`)\n  //   .then(result => console.log(result));\n}","'use strict'\nimport { lightbox, lightboxImage, lightboxClose } from './constants';\n\nexport function openModal(event) {\n    if (event.target.nodeName !== \"IMG\") {\n        return;\n    }\n    event.preventDefault()\n    lightbox.classList.add('is-open')\n    lightboxImage.src = `${event.target.dataset.source}`; //получено из разметки функции createGalleryItem\n    console.dir(event.target)\n    lightboxImage.alt = event.target.alt; //получено из разметки функции createGalleryItem\n};\n\n\n//====== close modal window =========\n// lightboxClose.addEventListener('click', overlayWindowClose);\n\n//закрытие модального окна по кнопке\nfunction overlayWindowClose() {\n    lightbox.classList.remove('is-open');\n    lightboxImage.src = '#';\n    lightboxImage.alt = '';\n};\n\n//закрытие модального окна по клику мыши\nlightbox.addEventListener('click', overlayWindowsCloseByMouse);\nfunction overlayWindowsCloseByMouse(event) {\n    let result = new MouseEvent('event', {\n    });\n    overlayWindowClose()\n};\n\n//закрытие модального окна по escape / esc\ndocument.addEventListener('keydown', overlayWindowCloseByEsc)\nfunction overlayWindowCloseByEsc(event) {\n    if (event.key === 'Escape')\n        //console.log(event.key); \n        overlayWindowClose()\n};","'use strict'\n\nimport { fetchImagesBtnAdditional, searchForm, inputField, galleryImagesList, alertPopup } from './constants';\nimport { markupImages } from './markupImages';\nimport { fetchImages } from './fetch';\nimport { openModal } from './modal';\n\n\nlet isAlertVisible = false; // управляет \"видимостью\" кнопки догрузки изображений\nlet page = 1; // Controls the group number\nlet limit = 12; // Controls the quantity of items in the group to display\nlet nameOfImage = \"\"; //select name of the image\nexport { nameOfImage, page, limit };\n\ngalleryImagesList.addEventListener('click', openModal);\n\nsearchForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault()\n  if (!inputField.value) {\n    alert('Введите название изображения')\n    return\n  }\n\n  if (nameOfImage === inputField.value) {\n    // console.log(inputField.value); \n    // console.log(nameOfImage);\n    alert(\"Поиск изображения с таким названием был выполнен, введите другое название\")\n    return\n  }\n\n  //выполненеие поиска нового типа изображения\n  if (nameOfImage !== inputField.value) {\n    nameOfImage = inputField.value;\n    // console.log(nameOfImage);\n    clearContent();\n    page = 1;\n    // console.log(nameOfImage);\n  }\n\n  else {\n    nameOfImage = inputField.value;\n    // console.log(nameOfImage)\n  }\n\n  fetchImages()\n    .then((images) => {\n      // const totalPages = Math.ceil(images.total / limit); //get quantity of pages in the images'collection\n      // console.log(totalPages);\n      console.dir(images.hits); //при обращении к значению объекта hits => Array, св-во length сохраняется\n      if (images.hits.length === 0) {\n        alert('Изображения с таким названием нет, уточните запрос')\n        return\n      }\n      renderImages(images.hits); //получние доступа к Массиву изображений в Объекте Json\n\n      buttonShowOnPageIncrease()\n\n    })\n    .catch((error) => console.log(error));\n});\n\n//===========добавление новых изображений вниз страницы при клике на кнопке \"добавить\"===============\nfetchImagesBtnAdditional.addEventListener('click', (event) => {\n  event.preventDefault;\n  fetchImages()\n    .then((images) => {\n      const totalPages = Math.ceil(images.total / limit); //get quantity of pages in the images'collection\n      // console.log(totalPages);\n      // console.dir(images.hits); //при обращении к значению объекта hits => Array, св-во length сохраняется\n      renderImages(images.hits); //получение доступа к Массиву изображений в Объекте Json; \n      //при обращении к значению объекта hits => через Array, св - во length сохраняется\n\n      //====прокрутка экрана при загрузке новых изображений при клике на кнопке \"добавить\"====\n      // let pageHeight = document.body.scrollHeight;\n      // console.log(pageHeight);\n      // window.scrollTo(0, pageHeight);\n\n      setTimeout(() => {\n        galleryImagesList.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        });\n      }, 500);\n      // console.log(pageHeight);\n\n      buttonShowOnPageIncrease(totalPages);\n    })\n    .catch((error) => console.log(error));\n});\n//=================================================\n\n//Show add_button when page number inreased\nfunction buttonShowOnPageIncrease(value) {\n\n  // Check the end of the collection to display an alert\n  if (page > value) {\n    fetchImagesBtnAdditional.classList.remove(\"is-visible\");\n    return toggleAlertPopupEndOfItems();\n  }\n  // Show button to load more after first request\n  page += 1;\n  console.log(page);\n\n  if (page > 1) { //&& images.hits.length > 0\n    fetchImagesBtnAdditional.classList.add(\"is-visible\");\n  }\n}\n//=========================\nfunction renderImages(value) {\n  const markup = markupImages(value)\n  galleryImagesList.insertAdjacentHTML(\"beforeend\", markup);\n};\n\nfunction clearContent() {\n  galleryImagesList.innerHTML = '';\n};\n\nfunction toggleAlertPopupEndOfItems() {\n  if (isAlertVisible) {\n    return;\n  }\n  isAlertVisible = true;\n  alertPopup.classList.add(\"is-visible\");\n  setTimeout(() => {\n    alertPopup.classList.remove(\"is-visible\");\n    isAlertVisible = false;\n  }, 2000);\n};\n"]}